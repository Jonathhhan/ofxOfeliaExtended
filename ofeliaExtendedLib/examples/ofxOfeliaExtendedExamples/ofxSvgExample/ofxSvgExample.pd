#N canvas 1080 507 543 306 10;
#X obj 16 15 cnv 15 500 270 empty empty empty 20 12 0 14 #f8fc00 #404040 0;
#X obj 41 25 cnv 15 450 250 empty empty ofxSvg 40 50 0 30 #00f8fc #f8fc00 0;
#X msg 81 143 upload 1;
#X text 77 195 adapted from tim scaffidi https://github.com/timscaffidi/ofxVolumetrics/tree/master/ofxVolumetricsExample jonathan frank 2021;
#X obj 81 120 loadbang;
#X obj 81 166 ofelia d -k \$0-srtparser;
#A __set if type(window) ~= "userdata" then \; window = ofWindow() \; end \; \; local a = ofelia \; local canvas = ofCanvas(this) \; local clock = ofClock(this \, "setup") \; local svg = ofxSvg() \; local pathVector = ofPathVector() \; local polyLineVector1 = ofPolylineVector() \; local polyLineVector2 = ofPolylineVector() \; local glmVector = ofxGlmVector() \; local step = 0 \; \; function a.new() \; ofWindow.addListener("setup" \, this) \; ofWindow.addListener("update" \, this) \; ofWindow.addListener("draw" \, this) \; ofWindow.addListener("exit" \, this) \; window:setPosition(30 \, 100) \; window:setSize(800 \, 600) \; if ofWindow.exists then \; clock:delay(0) \; else \; window:create() \; end \; end \; \; function a.free() \; window:destroy() \; ofWindow.removeListener("setup" \, this) \; ofWindow.removeListener("update" \, this) \; ofWindow.removeListener("draw" \, this) \; ofWindow.removeListener("exit" \, this) \; end \; \; function a.setup() \; ofSetWindowTitle("ofxSvg") \; ofBackground(150 \, 230 \, 255 \, 255) \; ofSetDataPathRoot("data") \; svg:load("tiger.svg") \; pathVector = svg:getPaths() \; print(pathVector:size()) \; for i = 0 \, pathVector:size() -1 \, 1 do \; pathVector[i]:setPolyWindingMode(OF_POLY_WINDING_NONZERO) \; polyLineVector1 = pathVector[i]:getOutline() \; for j = 0 \, polyLineVector1:size() -1 \, 1 do \; polyLineVector2:push_back(polyLineVector1[j]:getResampledBySpacing(1)) \; end \; end \; end \; \; function a.update() \; step = step + 0.001 \; if (step > 1) then \; step = step - 1 \; end \; end \; \; function a.draw() \; ofPushMatrix() \; ofTranslate(ofGetWidth() / 2 \, ofGetHeight() / 2) \; ofRotateDeg(ofGetMouseX()) \; local scale = ofMap(ofGetMouseY() \, 0 \, ofGetHeight() \, 0.5 \, 10) \; ofScale(scale \, scale \, scale) \; ofTranslate(-250 \, -250) \; if(ofGetMousePressed()) then \; ofNoFill() \; for i = 0 \, polyLineVector2:size() - 1 \, 1 do \; local num = step * polyLineVector2[i]:size() \; glmVector = polyLineVector2[i]:getVertices() \; ofBeginShape() \; for j = 0 \, num - 1 \, 1 do \; ofVertex(glmVector[j]) \; end \; ofEndShape() \; end \; else \; svg:draw() \; end \; ofPopMatrix() \; end \; \; function a.exit() \; end \;;
#X connect 2 0 5 0;
#X connect 4 0 2 0;
